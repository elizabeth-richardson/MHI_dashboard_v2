shiny::runApp()
runApp()
library(openxlsx) # writing xlsx spreadsheets
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
la_names
spatial.unit <- c("Aberdeen City", "Aberdeenshire", "Angus", "Argyll and Bute", "City of Edinburgh")
spatial.unit <- c("Scotland", Aberdeen City", "Aberdeenshire", "Angus", "Argyll and Bute", "City of Edinburgh")
spatial.unit <- c("Scotland", "Aberdeen City", "Aberdeenshire", "Angus", "Argyll and Bute", "City of Edinburgh")
#colour palette used here
phscolours <- c("#000000", #black
"#3F3685", "#9B4393", "#0078D4", "#83BB26", "#948DA3",
"#1E7F84", "#6B5C85", "#C73918", "#655E9D", "#9F9BC2",
"#C5C3DA", "#ECEBF3")
colmatch <- data.frame(phscolours, spatial.unit)
# number of the hovered spatial unit:
match("Angus", spatial.unit)
colour <- phscolours[match]
colour <- phscolours[[match]]
# number of the hovered spatial unit:
match <- match("Angus", spatial.unit)
colour <- phscolours[[match]]
trend_colour <- phscolours[match]
runApp()
all_data %>%
unique(spatial.unit)
all_data %>%
summarise(spatial.unit)
selected_spunit <- unique(all_data$spatial.unit) %>%
mutate(spatial.unit = factor(spatial.unit,# adjusting levels of spatial.scale, so Scotland always plotted as black
levels = c("Scotland", hb_names, la_names, pd_names
)))
selected <- all_data %>%
select(spatial.unit) %>%
summarise()
View(selected)
selected <- all_data %>%
group_by(spatial.unit) %>%
summarise()
View(selected)
selected <- all_data %>%
group_by(spatial.unit) %>%
summarise() %>%
mutate(spatial.unit = factor(spatial.unit,# adjusting levels of spatial.scale, so Scotland always plotted as black
levels = c("Scotland", hb_names, la_names, pd_names
)))
View(selected)
selected_spunits <- unique(selected$spatial.unit)
runApp()
shiny::runApp()
runApp()
runApp()
