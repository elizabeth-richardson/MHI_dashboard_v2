pyramid_pops <- read_excel("NSH_released_outputs_Dec2023/data_for_export_Dec2023.xlsx",
sheet = "pyramid_pops",
col_types = c("numeric", "text", "text", "text", "text", "numeric")) %>%
mutate(pop = case_when(is.na(pop) ~ 0,
TRUE ~ pop))
cg_pyramid_pops <- pyramid_pops %>%
filter(sex!="Total") %>%
filter(area=="Clyde Gateway") %>%
mutate(pop2 = pop/1000,
agegp = factor(agegp, levels = agegp, labels = agegp),
pop2 = case_when(sex=="Male" ~ -1*pop2, TRUE ~ as.double(pop2))) %>%
filter(year == 2020)  # last years only
cg_pyramid_pops2008 <- pyramid_pops %>%
filter(sex!="Total") %>%
filter(area=="Clyde Gateway") %>%
mutate(pop2 = pop/1000,
agegp = factor(agegp, levels = agegp, labels = agegp),
pop2 = case_when(sex=="Male" ~ -1*pop2, TRUE ~ as.double(pop2))) %>%
filter(year == 2008)  # last years only
ggplot(cg_pyramid_pops, aes(x=agegp, y=pop2,
fill=sex,
pattern = sex,
pattern_fill = sex)) +
geom_bar_pattern(data = function(x) subset(x, sex=="Male"), stat="identity",
pattern_density = 0.1,
alpha=0.8,
pattern_key_scale_factor=0.2,
color="black") +
geom_bar_pattern(data = function(x) subset(x, sex=="Female"), stat="identity",
pattern_density = 0.1,
alpha=0.8,
pattern_key_scale_factor=0.2 ,
color="black") +
scale_y_continuous(name = "population (1000s)") +
scale_x_discrete(name = "age\ngroup\n(years)") +
scale_fill_manual(name="Sex", values = c("Male" = "white", "Female" = "#3F3685")) +
scale_pattern_fill_manual(name="Sex", values = c("Male" = "darkgray", "Female" = "none")) +
scale_pattern_manual(name="Sex", values = c("Male" = "stripe", "Female" = "none")) +
coord_flip() +
theme_bw() +
theme(text = element_text(size=20),
legend.justification="top",
#   axis.text.y = element_text(color=c(1,0,1,0,1,0,1,0,1), size=12),
panel.spacing.x = unit(2, "lines"),
panel.grid.minor = element_blank(),
#  panel.grid.major = element_blank(),
legend.key.size = unit(1, 'cm'),
axis.title.y = element_text(angle=0, vjust=0.5, hjust=0.5),
strip.text.y = element_text(angle = 0)) +
facet_wrap(~poptype)
pacman::p_load(
tidyverse,
odbc # for reading oracle databases
)
## Part 1 - Extract deaths data from SMRA ----
###############################################.
# SMRA login information
channel <- suppressWarnings(dbConnect(odbc(),  dsn="SMRA",
uid=.rs.askForPassword("SMRA Username:"),
pwd=.rs.askForPassword("SMRA Password:")))
## Part 1 - Extract deaths data from SMRA ----
###############################################.
# SMRA login information
channel <- suppressWarnings(dbConnect(odbc(),  dsn="SMRA",
uid=.rs.askForPassword("SMRA Username:"),
pwd=.rs.askForPassword("SMRA Password:")))
# Extract deaths for 2000 to 2022
deaths_allage <- tibble::as_tibble(dbGetQuery(channel, statement=
"SELECT year_of_registration year, age, SEX sex,  datazone_2011 datazone2011, datazone_2001 datazone2001, UNDERLYING_CAUSE_OF_DEATH
FROM ANALYSIS.GRO_DEATHS_C
WHERE date_of_registration between '1 January 2000' AND '31 December 2022'
AND regexp_like(UNDERLYING_CAUSE_OF_DEATH, 'X6[0-9]|X7[0-9]|X8[0-4]|Y870|Y1[0-9]|Y2[0-9]|Y3[0-4]|Y872')
")) %>%  setNames(tolower(names(.)))  #variables to lower case
View(deaths_allage)
# Extract deaths for 2000 to 2022
deaths_allage <- tibble::as_tibble(dbGetQuery(channel, statement=
"SELECT year_of_registration year, age, SEX sex,  datazone_2011 datazone2011, datazone_2001 datazone2001, UNDERLYING_CAUSE_OF_DEATH
FROM ANALYSIS.GRO_DEATHS_C
WHERE date_of_registration between '1 January 2000' AND '31 December 2024'
AND regexp_like(UNDERLYING_CAUSE_OF_DEATH, 'X6[0-9]|X7[0-9]|X8[0-4]|Y870|Y1[0-9]|Y2[0-9]|Y3[0-4]|Y872')
")) %>%  setNames(tolower(names(.)))  #variables to lower case
View(deaths_allage)
# Extract deaths for 2000 to 2022
deaths_allage <- tibble::as_tibble(dbGetQuery(channel, statement=
"SELECT year_of_registration, age, SEX,  datazone_2011, datazone_2001,
UNDERLYING_CAUSE_OF_DEATH, date_of_registration
FROM ANALYSIS.GRO_DEATHS_C
WHERE date_of_registration between '1 January 2000' AND '31 December 2024'
AND regexp_like(UNDERLYING_CAUSE_OF_DEATH, 'X6[0-9]|X7[0-9]|X8[0-4]|Y870|Y1[0-9]|Y2[0-9]|Y3[0-4]|Y872')
")) %>%  setNames(tolower(names(.)))  #variables to lower case
View(deaths_allage)
# Extract deaths for 2000 to 2022
deaths_allage <- tibble::as_tibble(dbGetQuery(channel, statement=
"SELECT year_of_registration, age, SEX,  datazone_2011, datazone_2001,
UNDERLYING_CAUSE_OF_DEATH, date_of_registration
FROM ANALYSIS.GRO_DEATHS_C
WHERE date_of_registration between '1 January 2000' AND '31 December 2024'
AND regexp_like(UNDERLYING_CAUSE_OF_DEATH, 'X6[0-9]|X7[0-9]|X8[0-4]|Y870|Y1[0-9]|Y2[0-9]|Y3[0-4]|Y872')
")) %>%  setNames(tolower(names(.)))  #variables to lower case
## Extract deaths data from SMRA ----
###############################################.
# SMRA login information
channel <- suppressWarnings(dbConnect(odbc(),  dsn="SMRA",
uid=.rs.askForPassword("SMRA Username:"),
pwd=.rs.askForPassword("SMRA Password:")))
# Extract deaths for 2000 to 2022
deaths_allage <- tibble::as_tibble(dbGetQuery(channel, statement=
"SELECT year_of_registration, age, SEX,  datazone_2011, datazone_2001,
UNDERLYING_CAUSE_OF_DEATH, date_of_registration
FROM ANALYSIS.GRO_DEATHS_C
WHERE date_of_registration between '1 January 2000' AND '31 December 2024'
AND regexp_like(UNDERLYING_CAUSE_OF_DEATH, 'X6[0-9]|X7[0-9]|X8[0-4]|Y870|Y1[0-9]|Y2[0-9]|Y3[0-4]|Y872')
")) %>%  setNames(tolower(names(.)))  #variables to lower case
View(deaths_allage)
## Extract deaths data from SMRA ----
###############################################.
# SMRA login information
channel <- suppressWarnings(dbConnect(odbc(),  dsn="SMRA",
uid=.rs.askForPassword("SMRA Username:"),
pwd=.rs.askForPassword("SMRA Password:")))
# Extract deaths for 2000 to 2022
deaths_allage <- tibble::as_tibble(dbGetQuery(channel, statement=
"SELECT year_of_registration, age, SEX,  datazone_2011, datazone_2001,
UNDERLYING_CAUSE_OF_DEATH, date_of_registration
FROM ANALYSIS.GRO_DEATHS_C
WHERE date_of_registration between '1 January 2000' AND '31 December 2024'
AND regexp_like(UNDERLYING_CAUSE_OF_DEATH, 'X6[0-9]|X7[0-9]|X8[0-4]|Y870|Y1[0-9]|Y2[0-9]|Y3[0-4]|Y872')
")) %>%  setNames(tolower(names(.)))  #variables to lower case
View(deaths_allage)
library(tidyverse)
library(readxl)
library(matrixStats) #for weighted median
library(reldist) # for gini coeff
setwd("/PHI_conf/PHSci/Liz/devolved powers")
# read in data
equivincdf_simd5_2022base_long_agg <- read.csv("equivincdf_simd5_2022base_long_agg_2022-11-08.csv")
costs_and_gini<- read.csv("costs_and_gini_2022base2022-11-08.csv")
scenario_inequals_summary_apps <- read.csv("scenario_inequals_summary_apps.csv")
#get intervention order sorted
benefits_codes <- c("sc_2022_dev10", "sc_2022_dev25", "sc_2022_dev50", "sc_2022_dev75", "sc_2022_dev100")
# benefits_names <- c("Devolved + 10%","Devolved + 25%","Devolved + 50%", "Devolved + 75%","Devolved + 100%")
benefits_in_inc_change <- c("Devolved benefits\n + 10%", "Devolved benefits\n + 25%", "Devolved benefits\n + 50%", "Devolved benefits\n + 75%", "Devolved benefits\n + 100%")
# stusc_dev_codes <- c("sc_2022_dev10stusc", "sc_2022_dev25stusc", "sc_2022_dev50stusc", "sc_2022_dev75stusc", "sc_2022_dev100stusc")
# stusc_dev_names1 <- c("STUSC + Devolved+10%", "STUSC + Devolved+25%","STUSC + Devolved+50%",
#                     "STUSC + Devolved+75%","STUSC + Devolved+100%")
# stusc_dev_names2 <- c("High4 + Devolved+10%", "High4 + Devolved+25%","High4 + Devolved+50%",
#                      "High4 + Devolved+75%","High4 + Devolved+100%")
#
tax_codes <- c("sc_2022_v2",
"sc_2022_reform", "sc_2022_ruk2023v1", "sc_2022_ruk2019", "sc_2022_ukip",
"sc_2022_sc2019", "sc_2022_scons", "sc_2022_sc2017", "sc_2022_lib",
"sc_2022_slab", "sc_2022_rise", "sc_2022_sgreen", "sc_2022_stusc",
"sc_2022_padown")
# tax_names1 <- c("Baseline",
#                 "Reform UK Scotland", "Rest of UK 2023/24v1", "Rest of UK 2019/20", "UKIP",
#                 "Scotland 2019/20", "Scottish Conservatives", "Scotland 2017/18", "Scottish Liberal Democrats",
#                 "Scottish Labour", "RISE","Scottish Greens","Scottish Trade Unionist and Socialist Coalition",
#                 "Baseline + PA decrease")
# tax_names2 <- c("Baseline",
#                "Low 1","Low 2","Low 3","Low 4",
#                "Mid 1","Mid 2","Mid 3","Mid 4",
#                "High 1","High 2","High 3","High 4",
#                "Baseline + PA decrease")
tax_in_inc_change <- c("Low 1","Low 2","Low 3","Low 4",
"Mid 1","Mid 2","Mid 3","Mid 4",
"High 1","High 2","High 3","High 4",
"Baseline + PA decrease")
# sort the data
#setwd(file.path(analysisDir))
equivincdf_simd5_2 <-  equivincdf_simd5_2022base_long_agg %>%
select(-simd5_wtmedian) %>%
filter(!is.na(simd5)) %>%
group_by(simd5) %>%
mutate(base5 = simd5_wtmean[scenario=="sc_2022_v2"]) %>%
ungroup() %>%
mutate(change_yr = (simd5_wtmean - base5) * 12,
change_pc = 100 * (simd5_wtmean - base5) / base5)
inc_change <- equivincdf_simd5_2 %>%
mutate(Policy = factor(scenario,
levels = c("sc_2022_reform", "sc_2022_ruk2023v1", "sc_2022_ruk2019", "sc_2022_ukip",
"sc_2022_scons", "sc_2022_sc2017", "sc_2022_sc2019", "sc_2022_lib", #order changed mid1 now mid3
"sc_2022_slab", "sc_2022_rise", "sc_2022_sgreen", "sc_2022_stusc",
"sc_2022_padown",
"sc_2022_dev10", "sc_2022_dev25", "sc_2022_dev50", "sc_2022_dev75", "sc_2022_dev100",
"sc_2022_dev10stusc", "sc_2022_dev25stusc", "sc_2022_dev50stusc", "sc_2022_dev75stusc", "sc_2022_dev100stusc",
"sc_2022_v2"),
labels = c("Low 1","Low 2","Low 3","Low 4",
"Mid 1","Mid 2","Mid 3","Mid 4",
"High 1","High 2","High 3","High 4",
"Baseline + PA decrease",
"Devolved benefits\n + 10%", "Devolved benefits\n + 25%", "Devolved benefits\n + 50%", "Devolved benefits\n + 75%", "Devolved benefits\n + 100%",
"High 4 + Devolved+10%", "High 4 + Devolved+25%", "High 4 + Devolved+50%",
"High 4 + Devolved+75%", "High 4 + Devolved+100%",
"Baseline (Scotland 2022/23)"))) %>%
mutate(simd5 = factor(simd5))
write_rds(inc_change, "inc_change.rds")
costs_and_gini_2 <- costs_and_gini %>%
mutate(Policy = factor(scenario,
levels = c("sc_2022_reform", "sc_2022_ruk2023v1", "sc_2022_ruk2019", "sc_2022_ukip",
"sc_2022_scons", "sc_2022_sc2017", "sc_2022_sc2019", "sc_2022_lib", #order changed mid1 now mid3
"sc_2022_slab", "sc_2022_rise", "sc_2022_sgreen", "sc_2022_stusc",
"sc_2022_padown",
"sc_2022_dev10", "sc_2022_dev25", "sc_2022_dev50", "sc_2022_dev75", "sc_2022_dev100",
"sc_2022_dev10stusc", "sc_2022_dev25stusc", "sc_2022_dev50stusc", "sc_2022_dev75stusc", "sc_2022_dev100stusc",
"sc_2022_v2"),
labels = c("Low 1","Low 2","Low 3","Low 4",
"Mid 1","Mid 2","Mid 3","Mid 4",
"High 1","High 2","High 3","High 4",
"Baseline + PA decrease",
"Devolved + 10%", "Devolved + 25%", "Devolved + 50%", "Devolved + 75%", "Devolved + 100%",
"High 4 + Devolved+10%", "High 4 + Devolved+25%", "High 4 + Devolved+50%",
"High 4 + Devolved+75%", "High 4 + Devolved+100%",
"Baseline (Scotland 2022/23)")))
write_rds(costs_and_gini_2, "costs_and_gini_2.rds")
##Fig 1: income change by SIMD for Income Tax policies
ggplot(data = subset(inc_change, Policy %in% tax_in_inc_change & simd5!="NA")) +
geom_bar(aes(x=fct_rev(Policy), y=change_pc, fill=fct_rev(simd5)),
stat="identity",
position="dodge") +
coord_flip() +
scale_y_continuous(name = "% change in household income",
breaks=c(-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8)) +
scale_x_discrete(
name ="Policy scenario") +
theme_light(18) +
theme(plot.margin = unit(c(1,1,1,1), "lines"),
#        strip.text = element_text(color="black", angle=0),
legend.position = c(0.18,0.85),
#        legend.margin = margin(-0.4,-0.4,-0.4,-0.4, unit="cm"),
#        strip.text.y.right = element_text(angle = 0),
legend.title = element_text(size=14), #change legend title font size
legend.text = element_text(size=14),
legend.box.background = element_rect(color="white", size=2),
#        legend.box.margin = margin(8, 8, 8, 8),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_viridis_d("SIMD quintile", breaks = rev, direction = -1,
labels = c("1 (most deprived)", "2", "3", "4", "5 (least deprived)"))
ggsave("fig1.png")
ggsave("fig1.pdf")
##Fig 2: income change by SIMD for devolved benefits increases
ggplot(data = subset(inc_change, Policy %in% benefits_in_inc_change & simd5!="NA")) +
geom_bar(aes(x=fct_rev(Policy), y=change_pc, fill=fct_rev(simd5)),
stat="identity",
position="dodge") +
coord_flip() +
scale_y_continuous(name = "% change in household income",
breaks=c(0,1,2,3,4,5,6,7), limits=c(0, 7)) +
scale_x_discrete(
name ="Policy scenario") +
theme_light(18) +
theme(plot.margin = unit(c(1,1,1,1), "lines"),
#        strip.text = element_text(color="black", angle=0),
legend.position = c(0.8,0.75),
legend.margin = margin(-0.4,-0.4,-0.4,-0.4, unit="cm"),
#        strip.text.y.right = element_text(angle = 0),
legend.title = element_text(size=14), #change legend title font size
legend.text = element_text(size=14),
legend.box.background = element_rect(color="white", size=2),
legend.box.margin = margin(8, 8, 8, 8),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()
) +
scale_fill_viridis_d("SIMD quintile", breaks = rev, direction = -1,
labels = c("1 (most deprived)", "2", "3", "4", "5 (least deprived)"))
ggsave("fig2.png")
ggsave("fig2.pdf")
## combine all policies in same chart
scenarios <- c("Low 1","Low 2","Low 3","Low 4",
"Mid 1","Mid 2","Mid 3","Mid 4",
"High 1","High 2","High 3","High 4",
"Devolved benefits\n + 10%", "Devolved benefits\n + 25%",
"Devolved benefits\n + 50%", "Devolved benefits\n + 75%", "Devolved benefits\n + 100%"
# , "Devolved + 10%", "Devolved + 25%", "Devolved + 50%",
#  "Devolved + 75%", "Devolved + 100%"
)
##Fig 1: income change by SIMD for Income Tax policies
inc_change %>%
filter(Policy %in% scenarios & simd5!="NA") %>%
mutate(Policy = factor(Policy,
levels = c(scenarios),
labels = c("Low 1","Low 2","Low 3","Low 4",
"Mid 1","Mid 2","Mid 3","Mid 4",
"High 1","High 2","High 3","High 4",
"Devolved benefits + 10%", "Devolved benefits + 25%",
"Devolved benefits + 50%", "Devolved benefits + 75%", "Devolved benefits + 100%"))) %>%
ggplot() +
geom_bar(aes(x=fct_rev(Policy), y=change_pc, fill=fct_rev(simd5)),
stat="identity",
position="dodge") +
coord_flip() +
scale_y_continuous(name = "% change in household income",
breaks=c(-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8)) +
scale_x_discrete(name ="") +
theme_light(18) +
theme(plot.margin = unit(c(1,1,1,1), "lines"),
#        strip.text = element_text(color="black", angle=0),
legend.position = c(-0.35,0.9),
#        legend.margin = margin(-0.4,-0.4,-0.4,-0.4, unit="cm"),
#        strip.text.y.right = element_text(angle = 0),
legend.title = element_text(size=14), #change legend title font size
legend.text = element_text(size=14),
legend.box.background = element_rect(color="white", size=2),
#        legend.box.margin = margin(8, 8, 8, 8),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_viridis_d("SIMD quintile", breaks = rev, direction = -1,
labels = c("1 (most deprived)", "2", "3", "4", "5 (least deprived)"))
#colours
colourpicker16 <- c("maroon1", "firebrick3", "darkorange" , "olivedrab3", "green2" ,
"blue2", "deepskyblue3", "darkmagenta" ,"goldenrod4" ,"gray38",
"mediumorchid", "cadetblue1", "brown4", "slateblue4", "bisque4", "springgreen4",
"orange")
#shapes
shapes16 <- c(15, 16, 17, 18, 19, 20,
21, 22, 23, 24, 25, 15,
16, 17, 18, 19, 20)
# Net policy cost vs. Gini change
# Income Tax
ggplot(data=subset(costs_and_gini_2, scenario %in% tax_codes & scenario != "sc_2022_v2")) +
geom_point(aes(x=netcost, y=gini_pc_change, colour = Policy, shape=Policy, fill=Policy), size=5) +
scale_colour_manual(values = c(colourpicker16), name = "Policy") +
scale_fill_manual(values = c(colourpicker16), name = "Policy") +
scale_shape_manual(values = c(shapes16), name = "Policy") +
scale_x_continuous(name ="Net policy cost (?b p.a.)", breaks = c(-4000, -2000, 0, 2000, 4000, 6000), labels = c(-4, -2, 0, 2, 4, 6)) +
scale_y_continuous(name ="Net change in income inequality (% Gini)", breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8)) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
theme_light(18) +
theme(legend.text = element_text(size = 17),
axis.text = element_text(size = 17),
legend.position = c(0.9, 0.265),
legend.background = element_rect(linetype = "solid", colour = "grey"))
# Net policy cost vs. Gini change
# Income Tax
ggplot(data=subset(costs_and_gini_2, scenario %in% tax_codes & scenario != "sc_2022_v2")) +
geom_point(aes(x=netcost, y=gini_pc_change, colour = Policy, shape=Policy, fill=Policy), size=5) +
scale_colour_manual(values = c(colourpicker16), name = "Policy") +
scale_fill_manual(values = c(colourpicker16), name = "Policy") +
scale_shape_manual(values = c(shapes16), name = "Policy") +
scale_x_continuous(name ="Net policy cost (£b p.a.)", breaks = c(-4000, -2000, 0, 2000, 4000, 6000), labels = c(-4, -2, 0, 2, 4, 6)) +
scale_y_continuous(name ="Net change in income inequality (% Gini)", breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8)) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
theme_light(18) +
theme(legend.text = element_text(size = 17),
axis.text = element_text(size = 17),
legend.position = c(0.9, 0.265),
legend.background = element_rect(linetype = "solid", colour = "grey"))
# Net policy cost vs. Gini change
# Income Tax
ggplot(data=subset(costs_and_gini_2, scenario %in% tax_codes & scenario != "sc_2022_v2")) +
geom_point(aes(x=netcost, y=gini_pc_change, colour = Policy, shape=Policy, fill=Policy), size=5) +
scale_colour_manual(values = c(colourpicker16), name = "Policy") +
scale_fill_manual(values = c(colourpicker16), name = "Policy") +
scale_shape_manual(values = c(shapes16), name = "Policy") +
scale_x_continuous(name ="Net policy cost (£b p.a.)", breaks = c(-4000, -2000, 0, 2000, 4000, 6000), labels = c(-4, -2, 0, 2, 4, 6)) +
scale_y_continuous(name ="Net change in income inequality (% Gini)", breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8)) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
theme_light(18) +
theme(legend.text = element_text(size = 17),
axis.text = element_text(size = 17),
legend.position = c(0.85, 0.265),
legend.background = element_rect(linetype = "solid", colour = "grey"))
ggsave("fig3a.png")
ggsave("fig3a.pdf")
# Benefits
ggplot(data=subset(costs_and_gini_2, scenario %in% benefits_codes & scenario != "sc_2022_v2")) +
geom_point(aes(x=netcost, y=gini_pc_change, colour = Policy, shape=Policy, fill=Policy), size=5) +
scale_colour_manual(values = c(colourpicker16)) +
scale_fill_manual(values = c(colourpicker16)) +
scale_shape_manual(values = c(shapes16)) +
scale_x_continuous(name ="Net policy cost (?b p.a.)", breaks = c(0, 1000, 2000, 3000), labels = c(0, 1, 2, 3)) +
scale_y_continuous(name ="Net change in income inequality (% Gini)") +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
theme_light(18) +
theme(legend.text = element_text(size = 17),
axis.text = element_text(size = 17),
legend.position = c(0.8, 0.8),
legend.background = element_rect(linetype = "solid", colour = "grey"))
# Benefits
ggplot(data=subset(costs_and_gini_2, scenario %in% benefits_codes & scenario != "sc_2022_v2")) +
geom_point(aes(x=netcost, y=gini_pc_change, colour = Policy, shape=Policy, fill=Policy), size=5) +
scale_colour_manual(values = c(colourpicker16)) +
scale_fill_manual(values = c(colourpicker16)) +
scale_shape_manual(values = c(shapes16)) +
scale_x_continuous(name ="Net policy cost (?b p.a.)", breaks = c(0, 1000, 2000, 3000), labels = c(0, 1, 2, 3)) +
scale_y_continuous(name ="Net change in income inequality (% Gini)") +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
theme_light(18) +
theme(legend.text = element_text(size = 17),
axis.text = element_text(size = 17),
legend.position = c(0.75, 0.8),
legend.background = element_rect(linetype = "solid", colour = "grey"))
ggsave("fig3b.png")
# Benefits
ggplot(data=subset(costs_and_gini_2, scenario %in% benefits_codes & scenario != "sc_2022_v2")) +
geom_point(aes(x=netcost, y=gini_pc_change, colour = Policy, shape=Policy, fill=Policy), size=5) +
scale_colour_manual(values = c(colourpicker16)) +
scale_fill_manual(values = c(colourpicker16)) +
scale_shape_manual(values = c(shapes16)) +
scale_x_continuous(name ="Net policy cost (£b p.a.)", breaks = c(0, 1000, 2000, 3000), labels = c(0, 1, 2, 3)) +
scale_y_continuous(name ="Net change in income inequality (% Gini)") +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
theme_light(18) +
theme(legend.text = element_text(size = 17),
axis.text = element_text(size = 17),
legend.position = c(0.75, 0.8),
legend.background = element_rect(linetype = "solid", colour = "grey"))
ggsave("fig3b.png")
ggsave("fig3b.pdf")
#fig 4a: income tax policy effects on inequals in female life exp
scenario_inequals_summary_apps %>%
filter(scenario %in% tax_codes & scenario != "sc_2022_v2" & sex=="F") %>%
mutate(Policy = factor(scenario,
levels = c("sc_2022_reform", "sc_2022_ruk2023v1", "sc_2022_ruk2019", "sc_2022_ukip",
"sc_2022_scons", "sc_2022_sc2017", "sc_2022_sc2019", "sc_2022_lib", #order changed mid1 now mid3
"sc_2022_slab", "sc_2022_rise", "sc_2022_sgreen", "sc_2022_stusc",
"sc_2022_padown",
"sc_2022_dev10", "sc_2022_dev25", "sc_2022_dev50", "sc_2022_dev75", "sc_2022_dev100",
"sc_2022_dev10stusc", "sc_2022_dev25stusc", "sc_2022_dev50stusc", "sc_2022_dev75stusc", "sc_2022_dev100stusc",
"sc_2022_v2"),
labels = c("Low 1","Low 2","Low 3","Low 4",
"Mid 1","Mid 2","Mid 3","Mid 4",
"High 1","High 2","High 3","High 4",
"Baseline + PA decrease",
"Devolved benefits\n + 10%", "Devolved benefits\n + 25%", "Devolved benefits\n + 50%", "Devolved benefits\n + 75%", "Devolved benefits\n + 100%",
"High 4 + Devolved+10%", "High 4 + Devolved+25%", "High 4 + Devolved+50%",
"High 4 + Devolved+75%", "High 4 + Devolved+100%",
"Baseline (Scotland 2022/23)"))) %>%
ggplot() +
geom_bar(aes(x=Policy, y=rii_diff),
stat="identity",
position="dodge") +
coord_flip() +
scale_y_continuous(name = "effect on relative inequality in life expectancy (% change)") +
scale_x_discrete(name ="Policy scenario", limits=rev) +
theme_light(16) +
theme(plot.margin = unit(c(1,1,1,1), "lines"),
#        strip.text = element_text(color="black", angle=0),
legend.position = c(0.75,0.8),
legend.margin = margin(-0.4,-0.4,-0.4,-0.4, unit="cm"),
#        strip.text.y.right = element_text(angle = 0),
legend.title = element_text(size=14), #change legend title font size
legend.text = element_text(size=14),
legend.box.background = element_rect(color="white", size=2),
legend.box.margin = margin(8, 8, 8, 8),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()
)
ggsave("fig4a.png")
ggsave("fig4a.pdf")
#fig 4b: dev benefits increases effects on inequals in female life exp
ggplot(data = subset(scenario_inequals_summary_apps, scenario %in% benefits_codes & scenario != "sc_2022_v2" & sex=="F")) +
geom_bar(aes(x=Policy2, y=rii_diff),
stat="identity",
position="dodge") +
coord_flip() +
scale_y_continuous(name = "effect on relative inequality in life expectancy (% change)", limits = c(-10, 0), breaks = c(-10, -8, -6, -4, -2, 0)) +
scale_x_discrete(name ="Policy scenario", limits=rev) +
theme_light(16) +
theme(plot.margin = unit(c(1,1,1,1), "lines"),
#        strip.text = element_text(color="black", angle=0),
legend.position = c(0.75,0.8),
legend.margin = margin(-0.4,-0.4,-0.4,-0.4, unit="cm"),
#        strip.text.y.right = element_text(angle = 0),
legend.title = element_text(size=14), #change legend title font size
legend.text = element_text(size=14),
legend.box.background = element_rect(color="white", size=2),
legend.box.margin = margin(8, 8, 8, 8),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()
)
#fig 4b: dev benefits increases effects on inequals in female life exp
scenario_inequals_summary_apps %>%
filter(scenario %in% benefits_codes & scenario != "sc_2022_v2" & sex=="F") %>%
mutate(Policy = factor(scenario,
levels = c("sc_2022_reform", "sc_2022_ruk2023v1", "sc_2022_ruk2019", "sc_2022_ukip",
"sc_2022_scons", "sc_2022_sc2017", "sc_2022_sc2019", "sc_2022_lib", #order changed mid1 now mid3
"sc_2022_slab", "sc_2022_rise", "sc_2022_sgreen", "sc_2022_stusc",
"sc_2022_padown",
"sc_2022_dev10", "sc_2022_dev25", "sc_2022_dev50", "sc_2022_dev75", "sc_2022_dev100",
"sc_2022_dev10stusc", "sc_2022_dev25stusc", "sc_2022_dev50stusc", "sc_2022_dev75stusc", "sc_2022_dev100stusc",
"sc_2022_v2"),
labels = c("Low 1","Low 2","Low 3","Low 4",
"Mid 1","Mid 2","Mid 3","Mid 4",
"High 1","High 2","High 3","High 4",
"Baseline + PA decrease",
"Devolved benefits\n + 10%", "Devolved benefits\n + 25%", "Devolved benefits\n + 50%", "Devolved benefits\n + 75%", "Devolved benefits\n + 100%",
"High 4 + Devolved+10%", "High 4 + Devolved+25%", "High 4 + Devolved+50%",
"High 4 + Devolved+75%", "High 4 + Devolved+100%",
"Baseline (Scotland 2022/23)"))) %>%
ggplot() +
geom_bar(aes(x=Policy, y=rii_diff),
stat="identity",
position="dodge") +
coord_flip() +
scale_y_continuous(name = "effect on relative inequality in life expectancy (% change)", limits = c(-10, 0), breaks = c(-10, -8, -6, -4, -2, 0)) +
scale_x_discrete(name ="Policy scenario", limits=rev) +
theme_light(16) +
theme(plot.margin = unit(c(1,1,1,1), "lines"),
#        strip.text = element_text(color="black", angle=0),
legend.position = c(0.75,0.8),
legend.margin = margin(-0.4,-0.4,-0.4,-0.4, unit="cm"),
#        strip.text.y.right = element_text(angle = 0),
legend.title = element_text(size=14), #change legend title font size
legend.text = element_text(size=14),
legend.box.background = element_rect(color="white", size=2),
legend.box.margin = margin(8, 8, 8, 8),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()
)
ggsave("fig4b.png")
ggsave("fig4b.pdf")
